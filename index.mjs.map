{"version":3,"file":"index.mjs","sources":["../lib/pdf.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar beta = require( '@stdlib/math-base-special-beta' );\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar pow = require( '@stdlib/math-base-special-pow' );\n\n\n// MAIN //\n\n/**\n* Evaluates the probability density function (PDF) for a Student's t distribution with degrees of freedom `v` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {number} evaluated PDF\n*\n* @example\n* var y = pdf( 0.3, 4.0 );\n* // returns ~0.355\n*\n* @example\n* var y = pdf( 2.0, 0.7 );\n* // returns ~0.058\n*\n* @example\n* var y = pdf( -1.0, 0.5 );\n* // returns ~0.118\n*\n* @example\n* var y = pdf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = pdf( NaN, 2.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 2.0, -1.0 );\n* // returns NaN\n*/\nfunction pdf( x, v ) {\n\tvar betaTerm;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( v ) ||\n\t\tv <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tbetaTerm = sqrt( v ) * beta( v/2.0, 0.5 );\n\treturn pow( v / ( v + pow( x, 2.0 ) ), (1.0+v) / 2.0 ) / betaTerm;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils-constant-function' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar beta = require( '@stdlib/math-base-special-beta' );\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar pow = require( '@stdlib/math-base-special-pow' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability density function (PDF) for a Student's t distribution with `v` degrees of freedom.\n*\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {Function} PDF\n*\n* @example\n* var pdf = factory( 1.0 );\n* var y = pdf( 3.0 );\n* // returns ~0.032\n*\n* y = pdf( 1.0 );\n* // returns ~0.159\n*/\nfunction factory( v ) {\n\tvar exponent;\n\tvar betaTerm;\n\n\tif ( isnan( v ) || v <= 0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tbetaTerm = sqrt( v ) * beta( v/2.0, 0.5 );\n\texponent = ( 1.0 + v ) / 2.0;\n\treturn pdf;\n\n\t/**\n\t* Evaluates the probability density function (PDF) for a Student's t distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated PDF\n\t*\n\t* @example\n\t* var y = pdf( 2.3 );\n\t* // returns <number>\n\t*/\n\tfunction pdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn pow( v / ( v + pow( x, 2.0 ) ), exponent ) / betaTerm;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Student's t distribution probability density function (PDF).\n*\n* @module @stdlib/stats-base-dists-t-pdf\n*\n* @example\n* var pdf = require( '@stdlib/stats-base-dists-t-pdf' );\n*\n* var y = pdf( 3.0, 1.0 );\n* // returns ~0.032\n*\n* var myPDF = pdf.factory( 3.0 );\n* y = myPDF( 1.0 );\n* // returns ~0.207\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar pdf = require( './pdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( pdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = pdf;\n"],"names":["isnan","require$$0","beta","require$$1","sqrt","require$$2","pow","require$$3","constantFunction","require$$4","pdf","x","v","betaTerm","NaN","factory","exponent","lib"],"mappings":";;ojBAsBA,IAAIA,EAAQC,EACRC,EAAOC,EACPC,EAAOC,EACPC,EAAMC,EAoDV,ICvDIC,EAAmBP,EACnBD,EAAQG,EACRD,EAAOG,EACPD,EAAOG,EACPD,EAAMG,EAoDV,ICvCAC,EFsBA,SAAcC,EAAGC,GAChB,IAAIC,EACJ,OACCb,EAAOW,IACPX,EAAOY,IACPA,GAAK,EAEEE,KAERD,EAAWT,EAAMQ,GAAMV,EAAMU,EAAE,EAAK,IAC7BN,EAAKM,GAAMA,EAAIN,EAAKK,EAAG,KAAU,EAAIC,GAAK,GAAQC,IE/B1DE,EDKA,SAAkBH,GACjB,IAAII,EACAH,EAEJ,OAAKb,EAAOY,IAAOA,GAAK,EAChBJ,EAAkBM,MAE1BD,EAAWT,EAAMQ,GAAMV,EAAMU,EAAE,EAAK,IACpCI,GAAa,EAAMJ,GAAM,EAczB,SAAcD,GACb,GAAKX,EAAOW,GACX,OAAOG,IAER,OAAOR,EAAKM,GAAMA,EAAIN,EAAKK,EAAG,IAASK,GAAaH,KCjCtDZ,EAOAS,EAAA,UAAAK,GAKA,IAAAE,EAAAP"}